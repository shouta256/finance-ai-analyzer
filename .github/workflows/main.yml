name: Build & Push to Amazon ECR

on:
  push: { branches: ["main"] }
  workflow_dispatch: {}

permissions:
  id-token: write   # OIDC
  contents: read

env:
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_REGION:     ${{ secrets.AWS_REGION }}
  ECR_REGISTRY:   ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
  SHA:            ${{ github.sha }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # GitHub → AWS 認証（IAMで作成した OIDC ロール）
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      # ECR ログイン
      - name: Login to ECR
        run: |
          aws ecr get-login-password --region "$AWS_REGION" \
          | docker login --username AWS --password-stdin "$ECR_REGISTRY"

      # buildx（M1/M2でもOK / Fargate向け amd64 でビルド）
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      # ===== Web（必要なければこのステップを削除）=====
      - name: Build & Push next-web
        uses: docker/build-push-action@v6
        with:
          context: ./apps/web
          file: ./apps/web/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.ECR_REGISTRY }}/safepocket/next-web:${{ env.SHA }}
            ${{ github.ref == 'refs/heads/main' && format('{0}/safepocket/next-web:latest', env.ECR_REGISTRY) || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # ===== Backend（ledger-svc）=====
      - name: Build & Push ledger-svc
        uses: docker/build-push-action@v6
        with:
          context: ./apps/ledger-svc
          file: ./apps/ledger-svc/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.ECR_REGISTRY }}/safepocket/ledger-svc:${{ env.SHA }}
            ${{ github.ref == 'refs/heads/main' && format('{0}/safepocket/ledger-svc:latest', env.ECR_REGISTRY) || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
