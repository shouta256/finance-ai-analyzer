name: Web CI (Vercel) + Backend tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  web-ci:
    name: Web - Lint/Test/Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install deps (apps/web)
        run: pnpm -C apps/web install --frozen-lockfile

      - name: Run unit tests (apps/web)
        run: pnpm -C apps/web test

      - name: Build (apps/web)
        run: pnpm -C apps/web build

  vercel-deploy:
    name: Web - Deploy to Vercel
    needs: web-ci
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' && secrets.VERCEL_TOKEN != '' && secrets.VERCEL_ORG_ID != '' && secrets.VERCEL_PROJECT_ID != '' }}
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Pull Vercel env (production)
        working-directory: apps/web
        run: vercel pull --yes --environment=production --token=${{ env.VERCEL_TOKEN }}

      - name: Build on Vercel (prebuilt)
        working-directory: apps/web
        run: vercel build --prod --token=${{ env.VERCEL_TOKEN }}

      - name: Deploy to Vercel (production)
        working-directory: apps/web
        run: vercel deploy --prebuilt --prod --token=${{ env.VERCEL_TOKEN }}

  backend-tests:
    name: Backend - Unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Run tests (ledger-svc)
        run: ./apps/ledger-svc/gradlew -p apps/ledger-svc test
