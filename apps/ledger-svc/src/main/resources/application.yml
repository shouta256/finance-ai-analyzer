server:
  port: 8081

spring:
  application:
    name: ledger-svc
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/safepocket}
    driver-class-name: org.postgresql.Driver
    username: ${SPRING_DATASOURCE_USERNAME:safepocket}
    password: ${SPRING_DATASOURCE_PASSWORD:safepocket}
    hikari:
      initializationFailTimeout: 0
      connectionTimeout: 30000
      maximumPoolSize: 10
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        temp:
          use_jdbc_metadata_defaults: false
    open-in-view: false
  sql:
    init:
      mode: never
  flyway:
    enabled: true
    baseline-on-migrate: true
    baseline-version: 0
    locations: classpath:db/migration/{vendor}
  jackson:
    serialization:
      indent_output: true

management:
  endpoints:
    web:
      exposure:
        include: "health,info"
  endpoint:
    health:
      probes:
        enabled: true
      show-details: "never"

safepocket:
  cognito:
    issuer: ${COGNITO_ISSUER:https://cognito-idp.us-east-1.amazonaws.com/us-east-1_mFd4O5tGY}
    audience: ${COGNITO_AUDIENCE:5ge4c1b382ft2v71rvip0rrhqv}
    enabled: ${SAFEPOCKET_USE_COGNITO:false}
  plaid:
    client-id: ${PLAID_CLIENT_ID:demo-client}
    client-secret: ${PLAID_CLIENT_SECRET:demo-secret}
    redirect-uri: ${PLAID_REDIRECT_URI:}
    base-url: ${PLAID_BASE_URL:https://sandbox.plaid.com}
    environment: ${PLAID_ENV:sandbox}
    webhook-url: ${PLAID_WEBHOOK_URL:}
    webhook-secret: ${PLAID_WEBHOOK_SECRET:}
  ai:
    model: ${SAFEPOCKET_AI_MODEL:gpt-4o-mini}
    snapshot: ${SAFEPOCKET_AI_MODEL_SNAPSHOT:}
    endpoint: https://api.openai.com/v1/responses
    api-key: ${OPENAI_API_KEY:}
  chat:
    retention-days: ${SAFEPOCKET_CHAT_RETENTION_DAYS:30}
    cleanup-cron: ${SAFEPOCKET_CHAT_CLEANUP_CRON:0 30 3 * * *}
  security:
    # Must match frontend middleware fallback (ensure consistent default for local dev)
    dev-jwt-secret: ${SAFEPOCKET_DEV_JWT_SECRET:dev-secret-key-for-local-development-only}
  rag:
    vector-provider: ${VECTOR_PROVIDER:pgvector}
    embedding-model: ${EMBEDDING_MODEL:text-embedding-3-small}
    max-rows: ${RAG_MAX_ROWS:20}
    embed-dimension: ${RAG_EMBED_DIM:1536}
  db:
    # Enable lightweight bootstrap by default for local/dev so brand-new DBs have core tables
    # (users, merchants, transactions). In prod/staging, set SAFEPOCKET_DB_BOOTSTRAP=false
    # and rely on Flyway-managed migrations only.
    bootstrap-enabled: ${SAFEPOCKET_DB_BOOTSTRAP:true}
