openapi: 3.1.0
info:
  title: Safepocket API
  version: 0.1.0
  description: >-
    Contract for Safepocket Phase 1 MVP covering Plaid integration, transaction
    synchronization, analytics, anomaly detection, and AI highlights.
servers:
  - url: https://api.safepocket.local
    description: Local development
  - url: https://api.safepocket.app
    description: Production
security:
  - bearerAuth: []
paths:
  /auth/token:
    post:
      summary: Exchange Cognito authorization code or refresh token for Safepocket session
      operationId: exchangeAuthToken
      tags:
        - Authentication
      security: []  # Public endpoint (tokens issued from Cognito)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthTokenRequest'
      responses:
        '200':
          description: Tokens issued successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
  /plaid/link-token:
    post:
      summary: Create Plaid link token
      operationId: createPlaidLinkToken
      tags:
        - Plaid
      responses:
        '200':
          description: Link token created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaidLinkTokenResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
  /plaid/exchange:
    post:
      summary: Exchange Plaid public token for access token
      operationId: exchangePlaidPublicToken
      tags:
        - Plaid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaidExchangeRequest'
      responses:
        '200':
          description: Exchange recorded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaidExchangeResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
  /transactions/sync:
    post:
      summary: Trigger Plaid transaction sync
      operationId: triggerTransactionSync
      tags:
        - Transactions
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionsSyncRequest'
      responses:
        '202':
          description: Sync started
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsSyncResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
  /transactions/reset:
    post:
      summary: Reset transactions for the authenticated user
      operationId: resetTransactions
      tags:
        - Transactions
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionsResetRequest'
      responses:
        '202':
          description: Reset accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsResetResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
  /transactions:
    get:
      summary: List transactions for a user and month
      operationId: listTransactions
      tags:
        - Transactions
      parameters:
        - in: query
          name: month
          schema:
            type: string
            pattern: '^\\d{4}-\\d{2}$'
          description: Month to filter transactions by (YYYY-MM)
        - in: query
          name: from
          schema:
            type: string
            format: date
          description: Inclusive start date (YYYY-MM-DD). When provided, overrides `month`.
        - in: query
          name: to
          schema:
            type: string
            format: date
          description: Exclusive end date (YYYY-MM-DD). Defaults to today when `from` is provided without `to`.
        - in: query
          name: accountId
          schema:
            type: string
          description: Filter by account identifier
      responses:
        '200':
          description: Transactions retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsListResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
  /transactions/{transactionId}:
    patch:
      summary: Update selected properties of a transaction
      operationId: updateTransaction
      tags:
        - Transactions
      parameters:
        - in: path
          name: transactionId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionUpdateRequest'
      responses:
        '200':
          description: Transaction updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        default:
          $ref: '#/components/responses/ErrorResponse'
  /analytics/summary:
    get:
      summary: Retrieve monthly analytics summary
      operationId: getAnalyticsSummary
      tags:
        - Analytics
      parameters:
        - in: query
          name: month
          required: true
          schema:
            type: string
            pattern: '^\\d{4}-\\d{2}$'
          description: Month to generate analytics for (YYYY-MM)
        - in: query
          name: generateAi
          required: false
          schema:
            type: boolean
            default: false
          description: When true, request backend to generate AI summary via OpenAI. When false, backend returns lightweight/fallback summary.
      responses:
        '200':
          description: Analytics summary retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsSummaryResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
  /accounts:
    get:
      summary: List linked accounts for the authenticated user
      operationId: listAccounts
      tags:
        - Accounts
      responses:
        '200':
          description: Accounts retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsListResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
  /rag/search:
    post:
      summary: Search transactions with structured filters and semantic ranking
      operationId: ragSearch
      tags:
        - RAG
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RagSearchRequest'
      responses:
        '200':
          description: Compressed transaction slice for conversational RAG
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RagSearchResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
  /rag/summaries:
    get:
      summary: Retrieve lightweight month, category, and merchant summaries
      operationId: ragSummaries
      tags:
        - RAG
      parameters:
        - in: query
          name: month
          required: true
          schema:
            type: string
            pattern: '^\\d{4}-\\d{2}$'
          description: Month window to inspect (YYYY-MM)
      responses:
        '200':
          description: Summary payload optimised for LLM consumption
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RagSummariesResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
  /rag/aggregate:
    post:
      summary: Aggregate transactions for a custom window and granularity
      operationId: ragAggregate
      tags:
        - RAG
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RagAggregateRequest'
      responses:
        '200':
          description: Aggregated totals and timeline series
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RagAggregateResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
  /users/{userId}:
    delete:
      summary: Delete user and purge associated data
      operationId: deleteUser
      tags:
        - Users
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: User deleted
        default:
          $ref: '#/components/responses/ErrorResponse'
  /ai/chat:
    get:
      summary: Retrieve chat history
      operationId: getAiChatHistory
      tags:
        - AI
      parameters:
        - in: query
          name: conversationId
          required: false
          schema:
            type: string
            format: uuid
          description: Existing conversation identifier to fetch history for
      responses:
        '200':
          description: Chat response returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiChatResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
    post:
      summary: Send a chat message to AI assistant
      operationId: sendAiChatMessage
      tags:
        - AI
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AiChatRequest'
      responses:
        '200':
          description: Chat response returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiChatResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    ErrorResponse:
      description: Error response wrapper
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  schemas:
    AuthTokenRequest:
      type: object
      additionalProperties: false
      required:
        - grantType
      properties:
        grantType:
          type: string
          description: OAuth2 grant type to execute (authorization_code or refresh_token)
          enum:
            - authorization_code
            - refresh_token
        code:
          type: string
          description: Authorization code returned from Cognito Hosted UI callback (required for authorization_code grant)
        redirectUri:
          type: string
          format: uri
          description: Redirect URI registered in Cognito and used during authorization (required for authorization_code grant)
        codeVerifier:
          type: string
          description: PKCE code_verifier used during authorization (optional)
        refreshToken:
          type: string
          description: Refresh token issued by Cognito (required for refresh_token grant)
    AuthTokenResponse:
      type: object
      required:
        - accessToken
        - expiresIn
        - tokenType
        - traceId
      properties:
        accessToken:
          type: string
          description: Access token issued by Cognito (use in Authorization header)
        idToken:
          type: string
          description: ID token issued by Cognito (may be absent if scope excludes openid)
          nullable: true
        refreshToken:
          type: string
          description: Refresh token for obtaining new access tokens
          nullable: true
        expiresIn:
          type: integer
          format: int32
          description: Token lifetime in seconds
        tokenType:
          type: string
          description: Token type (typically Bearer)
        scope:
          type: string
          description: Granted scopes from Cognito
          nullable: true
        userId:
          type: string
          format: uuid
          description: Authenticated user identifier derived from token subject
          nullable: true
        traceId:
          type: string
          description: Request trace identifier for auditing
    AccountsListResponse:
      type: object
      required:
        - currency
        - totalBalance
        - accounts
        - traceId
      properties:
        currency:
          type: string
          minLength: 3
          maxLength: 3
          description: ISO 4217 currency code for balances
        totalBalance:
          type: number
          format: double
          description: Sum of balances across all accounts
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/Account'
        traceId:
          type: string
          description: Request trace identifier for auditing
    Account:
      type: object
      required:
        - id
        - name
        - institution
        - balance
        - currency
        - createdAt
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        institution:
          type: string
        type:
          type: string
          description: Account type (checking, savings, credit, etc.)
          nullable: true
        balance:
          type: number
          format: double
          description: Current account balance
        currency:
          type: string
          minLength: 3
          maxLength: 3
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the account was first recorded
        lastTransactionAt:
          type: string
          format: date-time
          description: Timestamp of the latest transaction observed for this account
          nullable: true
        linkedAt:
          type: string
          format: date-time
          description: When the underlying financial institution link was established
          nullable: true
    PlaidLinkTokenResponse:
      type: object
      required:
        - linkToken
        - expiration
        - requestId
      properties:
        linkToken:
          type: string
          description: Plaid Link token
        expiration:
          type: string
          format: date-time
          description: Expiration timestamp for the link token
        requestId:
          type: string
          description: Plaid request identifier
    PlaidExchangeRequest:
      type: object
      required:
        - publicToken
      properties:
        publicToken:
          type: string
          description: Plaid public token obtained from Link
    PlaidExchangeResponse:
      type: object
      required:
        - itemId
        - status
        - requestId
      properties:
        itemId:
          type: string
          description: Plaid item identifier associated with the user
        status:
          type: string
          description: Status of exchange request
          enum:
            - SUCCESS
        requestId:
          type: string
          description: Plaid request identifier
    TransactionsSyncRequest:
      type: object
      properties:
        cursor:
          type: string
          description: Cursor from last sync to request incremental updates
        forceFullSync:
          type: boolean
          default: false
          description: Force a full backfill of transactions
        demoSeed:
          type: boolean
          default: false
          description: When true, load demo accounts and sample transactions instead of calling Plaid
        startDate:
          type: string
          format: date
          description: Optional start date (YYYY-MM-DD) for Plaid backfill. Ignored when demoSeed is true.
    TransactionsSyncResponse:
      type: object
      required:
        - status
        - syncedCount
        - pendingCount
        - traceId
      properties:
        status:
          type: string
          enum:
            - STARTED
            - COMPLETED
        syncedCount:
          type: integer
          format: int32
          description: Number of transactions queued for processing
        pendingCount:
          type: integer
          format: int32
          description: Number of transactions remaining in backlog
        traceId:
          type: string
          description: Identifier for correlating async sync operations
    TransactionsResetRequest:
      type: object
      additionalProperties: false
      properties:
        unlinkPlaid:
          type: boolean
          default: false
          description: When true, unlink the Plaid item after purging transactions.
    TransactionsResetResponse:
      type: object
      required:
        - status
        - traceId
      properties:
        status:
          type: string
          enum:
            - ACCEPTED
        traceId:
          type: string
          description: Request trace identifier for auditing
    TransactionsListResponse:
      type: object
      required:
        - transactions
        - traceId
      properties:
        period:
          $ref: '#/components/schemas/TransactionsQueryPeriod'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
        traceId:
          type: string
          description: Request trace identifier for auditing
    TransactionsQueryPeriod:
      type: object
      properties:
        month:
          type: string
          description: Legacy month value (YYYY-MM) supplied by earlier clients
        from:
          type: string
          format: date
          description: Inclusive start date (YYYY-MM-DD)
        to:
          type: string
          format: date
          description: Exclusive end date (YYYY-MM-DD)
    Transaction:
      type: object
      required:
        - id
        - userId
        - accountId
        - merchantName
        - amount
        - currency
        - occurredAt
        - pending
        - category
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        accountId:
          type: string
          format: uuid
        merchantName:
          type: string
        amount:
          type: number
          format: double
        currency:
          type: string
          minLength: 3
          maxLength: 3
        occurredAt:
          type: string
          format: date-time
        authorizedAt:
          type: string
          format: date-time
          nullable: true
        pending:
          type: boolean
        category:
          type: string
        description:
          type: string
          nullable: true
        anomalyScore:
          $ref: '#/components/schemas/AnomalyScore'
    TransactionUpdateRequest:
      type: object
      additionalProperties: false
      properties:
        category:
          type: string
          description: New category name to assign
        notes:
          type: string
          description: Analyst notes for the transaction
      minProperties: 1
    AnalyticsSummaryResponse:
      type: object
      required:
        - month
        - totals
        - byCategory
        - topMerchants
        - anomalies
        - aiHighlight
        - traceId
      properties:
        month:
          type: string
          description: Month covered by the analytics (YYYY-MM)
        totals:
          $ref: '#/components/schemas/AnalyticsTotals'
        byCategory:
          type: array
          items:
            $ref: '#/components/schemas/CategoryBreakdown'
        topMerchants:
          type: array
          items:
            $ref: '#/components/schemas/MerchantBreakdown'
        anomalies:
          type: array
          items:
            $ref: '#/components/schemas/AnomalyInsight'
        aiHighlight:
          $ref: '#/components/schemas/AiHighlight'
        traceId:
          type: string
          description: Identifier for correlating AI computations
    AnalyticsTotals:
      type: object
      required:
        - income
        - expense
        - net
      properties:
        income:
          type: number
          format: double
        expense:
          type: number
          format: double
        net:
          type: number
          format: double
    CategoryBreakdown:
      type: object
      required:
        - category
        - amount
        - percentage
      properties:
        category:
          type: string
        amount:
          type: number
          format: double
        percentage:
          type: number
          format: double
          description: Portion of expense represented by the category
    MerchantBreakdown:
      type: object
      required:
        - merchant
        - amount
        - transactionCount
      properties:
        merchant:
          type: string
        amount:
          type: number
          format: double
        transactionCount:
          type: integer
          format: int32
    AnomalyScore:
      type: object
      required:
        - method
        - deltaAmount
        - budgetImpactPercent
      properties:
        method:
          type: string
          enum:
            - Z_SCORE
            - IQR
        deltaAmount:
          type: number
          format: double
          description: Absolute difference compared to typical spend for this merchant/category
        budgetImpactPercent:
          type: number
          format: double
          description: Percentage share of the month's total expenses accounted for by this transaction
        commentary:
          type: string
          nullable: true
    AnomalyInsight:
      type: object
      required:
        - transactionId
        - method
        - amount
        - deltaAmount
        - budgetImpactPercent
        - occurredAt
        - merchantName
      properties:
        transactionId:
          type: string
          format: uuid
        method:
          type: string
          enum:
            - Z_SCORE
            - IQR
        amount:
          type: number
          format: double
        deltaAmount:
          type: number
          format: double
          description: Absolute difference from typical spend for this merchant/category
        budgetImpactPercent:
          type: number
          format: double
          description: Percentage share of this month's total expenses
        occurredAt:
          type: string
          format: date-time
        merchantName:
          type: string
        commentary:
          type: string
          nullable: true
    AiHighlight:
      type: object
      required:
        - title
        - summary
        - sentiment
      properties:
        title:
          type: string
        summary:
          type: string
        sentiment:
          type: string
          enum:
            - POSITIVE
            - NEUTRAL
            - NEGATIVE
        recommendations:
          type: array
          items:
            type: string
          description: Optional next-best-actions surfaced by AI
    ErrorResponse:
      type: object
      required:
        - error
        - traceId
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: object
              additionalProperties: {}
        traceId:
          type: string
    AiChatRequest:
      type: object
      required:
        - message
      properties:
        conversationId:
          type: string
          format: uuid
          description: Existing conversation identifier; when omitted a new conversation is started.
        message:
          type: string
          description: User's message content
        truncateFromMessageId:
          type: string
          format: uuid
          description: Trim the stored conversation from this message (inclusive) before appending the new user message.
    AiChatMessage:
      type: object
      required:
        - id
        - role
        - content
        - createdAt
      properties:
        id:
          type: string
          format: uuid
        role:
          type: string
          enum: [USER, ASSISTANT]
        content:
          type: string
        createdAt:
          type: string
          format: date-time
    AiChatResponse:
      type: object
      required:
        - conversationId
        - messages
        - traceId
      properties:
        conversationId:
          type: string
          format: uuid
        messages:
          type: array
          items:
            $ref: '#/components/schemas/AiChatMessage'
        traceId:
          type: string
    RagSearchRequest:
      type: object
      properties:
        q:
          type: string
          description: Natural language query for semantic embedding search
        from:
          type: string
          format: date
          description: Inclusive start date filter (YYYY-MM-DD)
        to:
          type: string
          format: date
          description: Inclusive end date filter (YYYY-MM-DD)
        categories:
          type: array
          items:
            type: string
          description: Optional list of category names to include
        amountMin:
          type: integer
          format: int32
          minimum: 0
          description: Minimum amount in cents
        amountMax:
          type: integer
          format: int32
          minimum: 0
          description: Maximum amount in cents
        topK:
          type: integer
          format: int32
          minimum: 1
          maximum: 100
          description: Maximum number of candidate rows to evaluate before compression
        fields:
          type: array
          items:
            type: string
          description: Reserved for future selective field inclusion
    RagSearchResponse:
      type: object
      required:
        - rowsCsv
        - dict
        - stats
        - chatId
      properties:
        rowsCsv:
          type: string
          description: Up to 20 CSV rows (no header) using compact aliases (t*, m*, category codes)
        dict:
          type: object
          required:
            - merchants
            - categories
          properties:
            merchants:
              type: object
              additionalProperties:
                type: string
              description: Maps merchant short codes (m1..) to display names
            categories:
              type: object
              additionalProperties:
                type: string
              description: Maps category short codes to canonical labels
        stats:
          $ref: '#/components/schemas/RagSearchStats'
        traceId:
          type: string
          description: Correlation identifier echoed from TraceIdFilter
        chatId:
          type: string
          description: Session identifier to reuse for follow-up delta queries
    RagSearchStats:
      type: object
      required:
        - count
        - sum
        - avg
      properties:
        count:
          type: integer
          format: int32
          description: Number of rows included in rowsCsv
        sum:
          type: integer
          format: int64
          description: Total amount (cents) across returned rows
        avg:
          type: integer
          format: int64
          description: Average amount (cents) across returned rows
    RagSummariesResponse:
      type: object
      required:
        - month
        - totals
        - categories
        - merchants
      properties:
        month:
          type: string
          description: Month window represented (YYYY-MM)
        totals:
          $ref: '#/components/schemas/RagTotals'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/RagCategoryBreakdown'
        merchants:
          type: array
          items:
            $ref: '#/components/schemas/RagMerchantBreakdown'
        traceId:
          type: string
          description: Correlation identifier for auditing
    RagTotals:
      type: object
      required:
        - income
        - expense
        - net
      properties:
        income:
          type: integer
          format: int64
          description: Total inflow in cents
        expense:
          type: integer
          format: int64
          description: Total outflow in cents (negative)
        net:
          type: integer
          format: int64
          description: Net income-expense in cents
    RagCategoryBreakdown:
      type: object
      required:
        - code
        - label
        - count
        - sum
        - avg
      properties:
        code:
          type: string
          description: Short category alias (eo, gr, etc.)
        label:
          type: string
        count:
          type: integer
          format: int32
        sum:
          type: integer
          format: int64
        avg:
          type: integer
          format: int64
    RagMerchantBreakdown:
      type: object
      required:
        - merchantId
        - label
        - count
        - sum
      properties:
        merchantId:
          type: string
          description: Merchant identifier (UUID as string)
        label:
          type: string
        count:
          type: integer
          format: int32
        sum:
          type: integer
          format: int64
    RagAggregateRequest:
      type: object
      required:
        - granularity
      properties:
        from:
          type: string
          format: date
          description: Inclusive lower bound (optional)
        to:
          type: string
          format: date
          description: Inclusive upper bound (optional)
        granularity:
          type: string
          enum:
            - category
            - merchant
            - month
          description: Grouping dimension for aggregation
    RagAggregateResponse:
      type: object
      required:
        - granularity
        - buckets
        - chatId
      properties:
        granularity:
          type: string
          description: Echoed grouping dimension
        from:
          type: string
          format: date
          nullable: true
        to:
          type: string
          format: date
          nullable: true
        buckets:
          type: array
          items:
            $ref: '#/components/schemas/RagAggregateBucket'
        timeline:
          type: array
          items:
            $ref: '#/components/schemas/RagTimelinePoint'
        traceId:
          type: string
          description: Correlation identifier
        chatId:
          type: string
          description: Session identifier reused across aggregate/search requests
    RagAggregateBucket:
      type: object
      required:
        - key
        - label
        - count
        - sum
        - avg
      properties:
        key:
          type: string
        label:
          type: string
        count:
          type: integer
          format: int32
        sum:
          type: integer
          format: int64
        avg:
          type: integer
          format: int64
    RagTimelinePoint:
      type: object
      required:
        - bucket
        - count
        - sum
      properties:
        bucket:
          type: string
          description: Aggregation bucket label (YYYY-MM)
        count:
          type: integer
          format: int32
        sum:
          type: integer
          format: int64
